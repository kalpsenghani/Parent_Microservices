#--------------------------------------------
#1. docker-compose -p comp3095-microservices-ecommerce -f docker-compose.yml up -d
#--This command will start the containers in detached made without rebuilding the images (if they exists)
#2.docker-compose -p comp3095-microservices-eccomerce -f docker-compose.yml up -dm--build
# --This command force the rebuild of all images,even if they already exists before starting the containers
#-------------------------------------------------------------------------------

version: '3.9'
services:
  product-service:
    image: product-service
    ports:
      - "8084:8084"
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
    networks:
      - spring

  mongodb:
    image: mongo:latest
    ports:
      - "27019:27017"

    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./data/mongo/products:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    container_name: mongodb
    command: mongod --auth
    networks:
      - spring

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongodb
    container_name: local-mongo-express
    depends_on:
      - mongodb
    networks:
      - spring

volumes:
  mongodb:
    driver: local

networks:
  spring:
    driver: bridge
